--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v89=v5(v81,v19);v19=nil;return v89;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=0 -0 ;local v83;while true do if (v82==(0 -0)) then v83=(v31/((3 -1)^(v32-((1067 -(68 + 997)) -(1271 -(226 + 1044))))))%((621 -(555 + 64))^(((v33-((838 + 94) -(857 + 74))) -(v32-1)) + (569 -(367 + 201)))) ;return v83-(v83%(928 -(214 + 713))) ;end end else local v84=(1 + (1 -0))^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and (878 -(282 + 595))) or (1637 -(1523 + 114)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (8 -6) );v18=v18 + 2 ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23() local v37=(180 -(67 + 113)) + 0 + 0 ;local v38;local v39;local v40;local v41;while true do if (v37==(1 + 0)) then return (v41 * (16778173 -(892 + (159 -94)))) + (v40 * (156337 -90801)) + (v39 * (472 -216)) + v38 ;end if (v37==0) then v38,v39,v40,v41=v1(v16,v18,v18 + (4 -1) );v18=v18 + (354 -(64 + 23 + 263)) ;v37=1;end end end local function v24() local v42=v23();local v43=v23();local v44=3 -2 ;local v45=(v20(v43,1,972 -(802 + 150) ) * (((443 -(145 + 293)) -3)^(57 -25))) + v42 ;local v46=v20(v43,(446 -(44 + 386)) + 5 ,1028 -((2401 -(998 + 488)) + 82) );local v47=((v20(v43,90 -58 )==1) and  -(1 + 0)) or (1 -0) ;if (v46==(1187 -(1069 + 38 + 80))) then if (v45==(0 -0)) then return v47 * (0 -0) ;else local v90=0 + 0 ;while true do if (v90==(0 -0)) then v46=1 + 0 + 0 ;v44=791 -(368 + 423) ;break;end end end elseif (v46==(6433 -4386)) then return ((v45==(18 -(10 + 8))) and (v47 * ((3 -2)/(442 -(416 + 26))))) or (v47 * NaN) ;end return v8(v47,v46-(3266 -2243) ) * (v44 + (v45/((1 + 1)^(91 -39)))) ;end local function v25(v48) local v49;if  not v48 then local v85=0;while true do if (v85==(772 -(201 + (2084 -1513)))) then v48=v23();if (v48==(1138 -(116 + (3629 -2607)))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(4 -3) );v18=v18 + v48 ;local v50={};for v64=1 + (859 -(814 + 45)) , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do local v66=(function() return 0 -0 ;end)();while true do if (v66~=(0 -0)) then else if (v51== #"[") then local v95=(function() return 0 + 0 ;end)();local v96=(function() return;end)();while true do if (v95==(1456 -(282 + 1174))) then v96=(function() return 811 -(569 + 242) ;end)();while true do if (v96==2) then v51=(function() return 2;end)();break;end if (v96==1) then for v125= #"!",v56 do local v126=(function() return 0;end)();local v127=(function() return;end)();local v128=(function() return;end)();local v129=(function() return;end)();while true do if (v126~=0) then else local v203=(function() return 285 -(134 + 151) ;end)();while true do if (v203==0) then v127=(function() return 0 + 0 ;end)();v128=(function() return nil;end)();v203=(function() return 1666 -(970 + 695) ;end)();end if ((1 -0)~=v203) then else v126=(function() return 1;end)();break;end end end if (v126==(1991 -(582 + 1408))) then v129=(function() return nil;end)();while true do if (v127==(1251 -(721 + 530))) then v128=(function() return v21();end)();v129=(function() return nil;end)();v127=(function() return 3 -2 ;end)();end if (1~=v127) then else if (v128== #"[") then v129=(function() return v21()~=0 ;end)();elseif (v128==(4 -2)) then v129=(function() return v24();end)();elseif (v128== #"91(") then v129=(function() return v25();end)();end v57[v125]=(function() return v129;end)();break;end end break;end end end v55[ #"xxx"]=(function() return v21();end)();v96=(function() return 2 -0 ;end)();end if (v96~=(0 -0)) then else v56=(function() return v23();end)();v57=(function() return {};end)();v96=(function() return 1;end)();end end break;end end end if (v51~=(1824 -(1195 + 629))) then else local v97=(function() return 0;end)();local v98=(function() return;end)();while true do if (v97==0) then v98=(function() return 0 -0 ;end)();while true do if (v98~=(1 + 0)) then else v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v98=(function() return 782 -(162 + 618) ;end)();end if (v98~=(0 + 0)) then else v52=(function() return {};end)();v53=(function() return {};end)();v98=(function() return 1501 -(1408 + 92) ;end)();end if (v98==(2 + 0)) then v51=(function() return  #"!";end)();break;end end break;end end end v66=(function() return 1 -0 ;end)();end if (v66==(1 -0)) then if (v51~=(1 + 1)) then else for v99= #",",v23() do local v100=(function() return 1636 -(1373 + 263) ;end)();local v101=(function() return;end)();while true do if (v100==(0 + 0)) then v101=(function() return v21();end)();if (v20(v101, #"~", #"}")==(1000 -(451 + 549))) then local v105=(function() return 0 + 0 ;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();while true do if ((4 -1)==v105) then if (v20(v107, #"19(", #"19(")== #",") then v108[ #"xnxx"]=(function() return v57[v108[ #"http"]];end)();end v52[v99]=(function() return v108;end)();break;end if (v105==(2 -0)) then if (v20(v107, #"}", #"}")== #"{") then v108[2]=(function() return v57[v108[1386 -(746 + 638) ]];end)();end if (v20(v107,1 + 1 ,531 -(406 + 123) )~= #"}") then else v108[ #"xxx"]=(function() return v57[v108[ #"xnx"]];end)();end v105=(function() return 4 -1 ;end)();end if (v105==1) then local v189=(function() return 341 -(218 + 123) ;end)();while true do if (v189==(1582 -(1535 + 46))) then v105=(function() return 1 + 1 ;end)();break;end if (v189==(1145 -(466 + 679))) then v108=(function() return {v22(),v22(),nil,nil};end)();if (v106==(0 + 0)) then local v234=(function() return 0;end)();local v235=(function() return;end)();while true do if (v234==0) then v235=(function() return 0 -0 ;end)();while true do if ((0 + 0)~=v235) then else v108[ #"-19"]=(function() return v22();end)();v108[ #".dev"]=(function() return v22();end)();break;end end break;end end elseif (v106== #"[") then v108[ #"xxx"]=(function() return v23();end)();elseif (v106==2) then v108[ #"91("]=(function() return v23() -((562 -(306 + 254))^16) ;end)();elseif (v106== #"19(") then local v240=(function() return 0 + 0 ;end)();while true do if (v240~=(0 + 0)) then else v108[ #"xxx"]=(function() return v23() -((3 -1)^16) ;end)();v108[ #"xnxx"]=(function() return v22();end)();break;end end end v189=(function() return 1;end)();end end end if (v105==(0 + 0)) then local v190=(function() return 1467 -(899 + 568) ;end)();while true do if (v190~=(0 + 0)) then else local v225=(function() return 0 -0 ;end)();while true do if (v225==(2 -1)) then v190=(function() return 115 -(4 + 110) ;end)();break;end if (v225~=(603 -(268 + 335))) then else v106=(function() return v20(v101,2, #"asd");end)();v107=(function() return v20(v101, #".com",296 -(60 + 230) );end)();v225=(function() return 585 -(57 + 527) ;end)();end end end if (1~=v190) then else v105=(function() return 1428 -(41 + 1386) ;end)();break;end end end end end break;end end end for v102= #"}",v23() do v53[v102-#"," ]=(function() return v28();end)();end return v55;end break;end end end end local function v29(v58,v59,v60) local v61=v58[104 -(17 + 86) ];local v62=v58[2 + 0 ];local v63=v58[6 -3 ];return function(...) local v67=v61;local v68=v62;local v69=v63;local v70=v27;local v71=(773 -(326 + 445)) -1 ;local v72= -(167 -(122 + 44));local v73={};local v74={...};local v75=v12("#",...) -(3 -2) ;local v76={};local v77={};for v86=0 + 0 ,v75 do if (v86>=v69) then v73[v86-v69 ]=v74[v86 + 1 + 0 ];else v77[v86]=v74[v86 + (1 -0) ];end end local v78=(v75-v69) + (66 -(30 + 35)) ;local v79;local v80;while true do v79=v67[v71];v80=v79[1797 -(503 + 1293) ];if ((v80<=(69 -44)) or (3026<2280)) then if (v80<=(9 + 3)) then if ((v80<=(4 + (2 -1))) or (1653<=1108)) then if (v80<=(1259 -(1043 + 214))) then if (v80<=(0 + 0)) then if ((2909>2609) and (v79[7 -(11 -6) ]<=v77[v79[4 + 0 ]])) then v71=v71 + (1213 -(323 + 889)) ;else v71=v79[736 -(711 + 22) ];end elseif (v80==(2 -1)) then if v77[v79[861 -(240 + 619) ]] then v71=v71 + 1 + 0 ;else v71=v79[4 -1 ];end else local v134=v79[2];v77[v134]=v77[v134](v77[v134 + (581 -(361 + 219)) ]);end elseif (v80<=(323 -(53 + 267))) then v77[v79[1 + 1 ]]=v60[v79[416 -(15 + 398) ]];elseif (v80>(986 -(18 + 964))) then if (v77[v79[7 -5 ]]<v79[16 -12 ]) then v71=v71 + 1 + 0 ;else v71=v79[(713 -(530 + 181)) + 1 ];end else local v136=v79[408 -(183 + (1104 -(614 + 267))) ];v77[v136]=v77[v136](v77[v136 + (851 -(20 + 830)) ]);end elseif (v80<=((39 -(19 + 13)) + 1)) then if ((757>194) and (v80<=(132 -((188 -72) + 10)))) then v77[v79[1 + 1 ]]=v77[v79[741 -(542 + 196) ]] -v79[8 -4 ] ;elseif (v80>(5 + 2)) then local v138=338 -(118 + 220) ;local v139;while true do if (v138==((0 -0) + 0)) then v139=v79[1 + 1 ];v77[v139](v77[v139 + (2 -1) + 0 ]);break;end end else v77[v79[1 + 1 ]]=v79[7 -(2 + 2) ];end elseif ((v80<=(1503 -(711 + 782))) or (31>=1398)) then if (v80==(22 -(22 -9))) then v77[v79[1553 -(1126 + 425) ]]=v60[v79[(845 -437) -(118 + 287) ]];else local v144=v79[7 -5 ];v77[v144]=v77[v144](v13(v77,v144 + (1122 -(118 + 1003)) ,v72));end elseif (v80==(32 -21)) then v77[v79[379 -((1954 -(1293 + 519)) + 235) ]]=v29(v68[v79[13 -10 ]],nil,v60);elseif  not v77[v79[1 + 1 ]] then v71=v71 + (978 -((1128 -575) + 424)) ;else v71=v79[(18 -11) -4 ];end elseif (v80<=(33 -15)) then if ((3196<=4872) and (v80<=(14 + 1))) then if (v80<=(13 + 0)) then v71=v79[2 + 1 ];elseif (v80==(6 + (14 -6))) then v77[v79[(8 -6) + 0 ]]=v77[v79[2 + 1 ]][v79[8 -4 ]];else local v149=0 -0 ;local v150;while true do if (v149==(0 -0)) then v150=v79[1838 -(1045 + (1863 -1072)) ];v77[v150]=v77[v150](v13(v77,v150 + 1 + 0 ,v72));break;end end end elseif (v80<=(77 -61)) then if  not v77[v79[(400 + 355) -(239 + 514) ]] then v71=v71 + 1 + 0 ;else v71=v79[1332 -(797 + 532) ];end elseif ((3326==3326) and (v80>(13 + 4))) then v77[v79[1 + 1 ]]=v77[v79[6 -3 ]];else v77[v79[1204 -(373 + 829) ]]=v77[v79[734 -(476 + 255) ]] + v79[2 + 2 ] ;end elseif ((1433<=3878) and (v80<=(5 + 16))) then if (v80<=(1149 -(369 + 761))) then if (v79[2 + 0 ]<v77[v79[3 + 1 ]]) then v71=v71 + ((2 -1) -0) ;else v71=v79[5 -2 ];end elseif (v80==(34 -14)) then local v156=v79[240 -(64 + 41 + 133) ];v77[v156]=v77[v156](v13(v77,v156 + (1 -0) ,v79[1 + 2 ]));else v77[v79[2 -0 ]]=v77[v79[339 -(144 + 192) ]] -v79[220 -(42 + 174) ] ;end elseif ((v80<=(18 + 5)) or (1583==1735)) then if ((v80==(10 + 12)) or (2981==2350)) then if ((v77[v79[1 + 1 + 0 ]]==v79[2 + 2 ]) or (4466<=493)) then v71=v71 + (1505 -(363 + 1141)) ;else v71=v79[629 -(512 + 114) ];end elseif v77[v79[1582 -(1183 + 397) ]] then v71=v71 + (2 -1) ;else v71=v79[10 -7 ];end elseif (v80>(12 + 12)) then v71=v79[3 + 0 ];elseif (v79[2 + 0 ]<v77[v79[1979 -(1913 + 39 + 23) ]]) then v71=v71 + 1 + (1096 -(709 + 387)) ;else v71=v79[7 -4 ];end elseif ((v80<=(1971 -(565 + 1368))) or (2547<=1987)) then if (v80<=(116 -85)) then if (v80<=(1689 -(1477 + (2042 -(673 + 1185))))) then if (v80<=(34 -(23 -15))) then if (v77[v79[2 + 0 ]]==v79[860 -(564 + 292) ]) then v71=v71 + ((2620 -1804) -(98 + 717)) ;else v71=v79[(6 -2) -1 ];end elseif ((2961>2740) and (v80==27)) then if (v77[v79[5 -3 ]]<v79[308 -(244 + 60) ]) then v71=v71 + 1 + 0 ;else v71=v79[5 -2 ];end else v77[v79[478 -(30 + 11 + 435) ]]();end elseif (v80<=(1030 -(938 + 63))) then local v113=0 + 0 ;local v114;local v115;local v116;while true do if (1==v113) then v116=0 + 0 + 0 ;for v211=v114,v79[1129 -(936 + (254 -65)) ] do local v212=0 + 0 ;while true do if (v212==(1613 -(1565 + 48))) then v116=v116 + 1 + 0 + 0 ;v77[v211]=v115[v116];break;end end end break;end if ((1138 -((1558 -776) + 356))==v113) then v114=v79[269 -(176 + 91) ];v115={v77[v114](v77[v114 + (1 -0) ])};v113=1093 -(975 + 117) ;end end elseif (v80==(1905 -(157 + 1718))) then if (v79[2 + 0 ]<=v77[v79[14 -10 ]]) then v71=v71 + (3 -2) ;else v71=v79[1021 -((1368 -671) + 321) ];end else local v161=0 + 0 ;local v162;while true do if (0==v161) then v162=v79[2 + 0 ];v77[v162](v77[v162 + (2 -1) ]);break;end end end elseif ((3696>=3612) and (v80<=(71 -37))) then if (v80<=(155 -123)) then do return;end elseif ((v80==(75 -42)) or (2970==1878)) then v77[v79[1 + 1 ]]=v29(v68[v79[6 -3 ]],nil,v60);else v77[v79[3 -1 ]]=v77[v79[3 + (1880 -(446 + 1434)) ]];end elseif (v80<=(17 + 19)) then if (v80>(93 -(1341 -(1040 + 243)))) then local v166=v79[1229 -(322 + 905) ];v77[v166]=v77[v166](v13(v77,v166 + 1 + 0 ,v79[614 -(602 + 9) ]));elseif ((v79[1191 -(449 + 740) ]==v77[v79[15 -11 ]]) or (3693<1977)) then v71=v71 + (873 -(826 + 46)) ;else v71=v79[1809 -(1202 + 604) ];end elseif (v80>(984 -(245 + 702))) then v77[v79[6 -4 ]]=v77[v79[1 + 2 ]] + v79[329 -(45 + (835 -555)) ] ;else for v192=v79[1900 -(260 + (3485 -(559 + 1288))) ],v79[443 -(382 + 58) ] do v77[v192]=nil;end end elseif ((v80<=(140 -96)) or (930>2101)) then if ((4153>3086) and (v80<=((1966 -(609 + 1322)) + 6))) then if ((v80<=(80 -41)) or (4654<=4050)) then local v117=0 -0 ;local v118;local v119;while true do if (v117==((1660 -(13 + 441)) -(902 + 303))) then v77[v118 + (1 -0) ]=v119;v77[v118]=v119[v79[9 -5 ]];break;end if (v117==(0 + 0)) then v118=v79[1692 -(1121 + 569) ];v119=v77[v79[217 -((82 -60) + 192) ]];v117=684 -(483 + 200) ;end end elseif (v80==40) then for v199=v79[1 + (2 -1) ],v79[1466 -(1404 + 59) ] do v77[v199]=nil;end else v77[v79[2 -0 ]]=v77[v79[3 + 0 ]][v79[4]];end elseif (v80<=(554 -((2036 -1627) + 103))) then local v120=v79[5 -3 ];local v121,v122=v70(v77[v120](v13(v77,v120 + (1 -0) ,v79[98 -(51 + 44) ])));v72=(v122 + v120) -(766 -(468 + 297)) ;local v123=562 -(334 + 9 + 219) ;for v130=v120,v72 do v123=v123 + (3 -2) ;v77[v130]=v121[v123];end elseif (v80>(99 -56)) then local v171=(0 -0) -0 ;local v172;while true do if ((v171==(0 + 0)) or (2602<1496)) then v172=v79[(85 + 153) -(141 + 95) ];v77[v172](v13(v77,v172 + 1 + 0 + 0 ,v79[1320 -(1114 + 203) ]));break;end end else local v173=v79[4 -2 ];local v174=v77[v79[6 -3 ]];v77[v173 + 1 + (0 -0) ]=v174;v77[v173]=v174[v79[10 -6 ]];end elseif ((v80<=(26 + 21)) or (1020>2288)) then if ((328==328) and (v80<=(708 -(174 + 489)))) then local v124=v79[2 + 0 ];v77[v124](v13(v77,v124 + 1 + 0 ,v79[4 -1 ]));elseif (v80==(28 + 18)) then v77[v79[1907 -(830 + 1075) ]]();elseif (v79[165 -(92 + 71) ]==v77[v79[2 + 0 + 2 ]]) then v71=v71 + (1 -(0 -0)) ;else v71=v79[768 -(574 + 191) ];end elseif ((1511<3808) and (v80<=(1211 -(171 + 991)))) then if (v80>(40 + 8)) then do return;end else local v178=v79[4 -2 ];local v179,v180=v70(v77[v178](v13(v77,v178 + 1 + 0 ,v79[(564 + 288) -(254 + 595) ])));v72=(v180 + v178) -((71 + 56) -(55 + 71)) ;local v181=0 -0 ;for v201=v178,v72 do local v202=1790 -(573 + 875 + 342) ;while true do if (v202==(0 -0)) then v181=v181 + 1 + 0 + 0 ;v77[v201]=v179[v181];break;end end end end elseif ((v80>(144 -94)) or (2510>4919)) then v77[v79[2 -0 ]]=v79[4 -1 ];else local v184=939 -(714 + 225) ;local v185;local v186;local v187;while true do if ((4763==4763) and (v184==(2 -1))) then v187=0 -0 ;for v228=v185,v79[1 + 3 + 0 ] do v187=v187 + ((434 -(153 + 280)) -0) ;v77[v228]=v186[v187];end break;end if (v184==(806 -(118 + 688))) then v185=v79[(144 -94) -(25 + 23) ];v186={v77[v185](v77[v185 + 1 + 0 ])};v184=2 -1 ;end end end v71=v71 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
