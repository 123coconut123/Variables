--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v87=v5(v82,v19);v19=nil;return v87;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -(1 + 0))) -(v32-(620 -(88 + 467 + 64)))) + 1)) ;return v83-(v83%(932 -(857 + (951 -(282 + 595))))) ;else local v84=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v84 + v84))>=v84) and 1) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1639 -(1523 + 114)) );v18=v18 + 2 + 0 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=1065 -(68 + 997) ;local v38;local v39;local v40;local v41;while true do if (v37==(1271 -(226 + 1044))) then return (v41 * (73054774 -56277558)) + (v40 * ((121355 -55702) -(32 + (155 -70)))) + (v39 * ((601 -(87 + 263)) + 5)) + v38 ;end if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (960 -((1072 -(67 + 113)) + 65)) );v18=v18 + 4 ;v37=2 -1 ;end end end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,2 -1 ,62 -42 ) * ((2 + (859 -(814 + 45)))^32)) + v42 ;local v46=v20(v43,83 -62 ,31);local v47=((v20(v43,984 -(802 + 150) )==(2 -1)) and  -(1 -0)) or (1 + 0) ;if (v46==(997 -(915 + 82))) then if (v45==(0 -0)) then return v47 * (430 -(44 + 386)) ;else local v88=0 + 0 ;while true do if (v88==(0 -0)) then v46=1 -0 ;v44=(64 + 1123) -(378 + 691 + 118) ;break;end end end elseif (v46==2047) then return ((v45==((885 -(261 + 624)) -0)) and (v47 * ((1 -0)/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-(1817 -(1410 -616)) ) * (v44 + (v45/((2 + 0)^(184 -(1212 -(1020 + 60)))))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(4 -3) );v18=v18 + v48 ;local v50={};for v65=1424 -(630 + 793) , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 1636 -(1373 + 263) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 1000 -(451 + 549) ;end)();while true do if (v67~=1) then else if (v51==0) then local v95=(function() return 0 + 0 ;end)();local v96=(function() return;end)();while true do if (v95==0) then v96=(function() return 0 -0 ;end)();while true do if (v96==(0 -0)) then v52=(function() return function(v115,v116,v117) local v118=(function() return 1384 -(746 + 638) ;end)();while true do if (v118~=(0 + 0)) then else v115[v116-#"," ]=(function() return v117();end)();return v115,v116,v117;end end end;end)();v53=(function() return {};end)();v96=(function() return 1;end)();end if (v96~=1) then else v54=(function() return {};end)();v51=(function() return 1 -0 ;end)();break;end end break;end end end if (v51~=(1785 -(599 + 1185))) then else local v97=(function() return 0 -0 ;end)();while true do if ((1 + 0)~=v97) then else v57=(function() return v23();end)();v51=(function() return 2 + 0 ;end)();break;end if (v97==0) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v97=(function() return 1750 -(1013 + 736) ;end)();end end end break;end if (v67==(0 + 0)) then if (v51~=(4 -2)) then else local v98=(function() return 0 -0 ;end)();local v99=(function() return;end)();while true do if (v98==(867 -(550 + 317))) then v99=(function() return 0;end)();while true do if (v99==(561 -(306 + 254))) then v56[ #"19("]=(function() return v21();end)();v51=(function() return 3;end)();break;end if (v99~=0) then else v58=(function() return {};end)();for v111= #",",v57 do local v112=(function() return 0 + 0 ;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v112~=(0 -0)) then else v113=(function() return v21();end)();v114=(function() return nil;end)();v112=(function() return 1468 -(899 + 568) ;end)();end if (1~=v112) then else if (v113== #">") then v114=(function() return v21()~=(0 -0) ;end)();elseif (v113==(4 -2)) then v114=(function() return v24();end)();elseif (v113== #"nil") then v114=(function() return v25();end)();end v58[v111]=(function() return v114;end)();break;end end end v99=(function() return 604 -(268 + 335) ;end)();end end break;end end end if (v51==(8 -5)) then for v100= #",",v23() do local v101=(function() return v21();end)();if (v20(v101, #"!", #"|")~=(285 -(134 + 151))) then else local v103=(function() return 0;end)();local v104=(function() return;end)();local v105=(function() return;end)();local v106=(function() return;end)();while true do if (v103~=(573 -(426 + 146))) then else local v108=(function() return 0 + 0 ;end)();while true do if (v108~=(1457 -(282 + 1174))) then else v103=(function() return 2;end)();break;end if (v108==0) then v106=(function() return {v22(),v22(),nil,nil};end)();if (v104==0) then local v143=(function() return 0;end)();local v144=(function() return;end)();while true do if (v143==(0 -0)) then v144=(function() return 0;end)();while true do if (v144~=(1990 -(582 + 1408))) then else v106[ #"91("]=(function() return v22();end)();v106[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v104== #"]") then v106[ #"xnx"]=(function() return v23();end)();elseif (v104==(6 -4)) then v106[ #"xxx"]=(function() return v23() -((2 -0)^(60 -44)) ;end)();elseif (v104~= #"91(") then else local v233=(function() return 1824 -(1195 + 629) ;end)();local v234=(function() return;end)();while true do if (v233==(0 -0)) then v234=(function() return 0;end)();while true do if (v234~=(0 + 0)) then else v106[ #"-19"]=(function() return v23() -((1026 -(706 + 318))^(1267 -(721 + 530))) ;end)();v106[ #"http"]=(function() return v22();end)();break;end end break;end end end v108=(function() return 1;end)();end end end if (v103~=2) then else if (v20(v105, #"[", #"<")== #"|") then v106[243 -(187 + 54) ]=(function() return v58[v106[782 -(162 + 618) ]];end)();end if (v20(v105,2 + 0 ,2)~= #" ") then else v106[ #"gha"]=(function() return v58[v106[ #"nil"]];end)();end v103=(function() return 2 + 1 ;end)();end if (v103~=(3 + 0)) then else if (v20(v105, #"xnx", #"nil")== #"]") then v106[ #"asd1"]=(function() return v58[v106[ #"0836"]];end)();end v53[v100]=(function() return v106;end)();break;end if ((700 -(271 + 429))==v103) then local v110=(function() return 0 + 0 ;end)();while true do if (v110~=(1500 -(1408 + 92))) then else v104=(function() return v20(v101,3 -1 , #"-19");end)();v105=(function() return v20(v101, #".com",6);end)();v110=(function() return 1 -0 ;end)();end if ((1 + 0)==v110) then v103=(function() return 1 + 0 ;end)();break;end end end end end end for v102= #"{",v23() do v54,v102,v28=(function() return v52(v54,v102,v28);end)();end return v56;end v67=(function() return 1172 -(418 + 753) ;end)();end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 + 0 ];local v63=v59[1 + 1 ];local v64=v59[1 + 2 ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1 + 0 ;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -(1770 -((1912 -(92 + 71)) + 10 + 10)) ;local v77={};local v78={};for v85=0 + (0 -0) ,v76 do if ((272==272) and (v85>=v70)) then v74[v85-v70 ]=v75[v85 + (1323 -(1249 + 73)) ];else v78[v85]=v75[v85 + (766 -(574 + 191)) ];end end local v79=(v76-v70) + 1 + 0 ;local v80;local v81;while true do local v86=1145 -(466 + 679) ;while true do if (v86==1) then if ((4249<=4839) and (v81<=(59 -34))) then if (v81<=(34 -22)) then if (v81<=(1905 -(88 + 18 + 1794))) then if (v81<=(4 -2)) then if ((2777<3200) and (v81<=(0 + 0))) then v78[v80[2]]=v80[3];elseif (v81==(1 + 0 + 0)) then if (v80[5 -3 ]<=v78[v80[10 -6 ]]) then v72=v72 + 1 ;else v72=v80[(966 -(254 + 595)) -(4 + 110) ];end elseif ((95<1957) and (v78[v80[586 -(57 + (653 -(55 + 71))) ]]<v80[1431 -(41 + 1386) ])) then v72=v72 + (104 -(17 + 86)) ;else v72=v80[3 + 0 ];end elseif (v81<=(6 -3)) then if  not v78[v80[5 -3 ]] then v72=v72 + (167 -(122 + 44)) ;else v72=v80[3];end elseif (v81>(6 -2)) then if (v80[2]==v78[v80[12 -8 ]]) then v72=v72 + 1 ;else v72=v80[3 + 0 ];end else v78[v80[1 + 1 ]]();end elseif (v81<=(16 -(10 -2))) then if ((826<1717) and (v81<=(71 -(30 + 35)))) then if ((1426>=1105) and (v80[2]==v78[v80[4]])) then v72=v72 + 1 + 0 ;else v72=v80[1260 -(1043 + 214) ];end elseif (v81==(26 -19)) then v78[v80[2]]=v78[v80[1215 -(323 + 889) ]] + v80[10 -6 ] ;else local v148=v80[582 -(361 + 219) ];v78[v148](v13(v78,v148 + 1 ,v80[323 -(53 + 267) ]));end elseif (v81<=(3 + 7)) then if (v81>(422 -(15 + (2188 -(573 + 1217))))) then if ((2754<=3379) and (v78[v80[984 -((49 -31) + 964) ]]==v80[14 -(1 + 9) ])) then v72=v72 + (1 -0) + 0 ;else v72=v80[2 + 1 ];end else local v149=v80[2];local v150={v78[v149](v78[v149 + (851 -(20 + 830)) ])};local v151=0 + 0 ;for v202=v149,v80[130 -(116 + 10) ] do local v203=0 + 0 ;while true do if (v203==0) then v151=v151 + (739 -(542 + 196)) ;v78[v202]=v150[v151];break;end end end end elseif (v81==(23 -12)) then if v78[v80[1 + 1 ]] then v72=v72 + 1 + 0 ;else v72=v80[2 + 1 ];end else v78[v80[4 -2 ]]=v78[v80[7 -4 ]] -v80[1555 -(1126 + 425) ] ;end elseif (v81<=(423 -(118 + 287))) then if (v81<=15) then if ((v81<=(50 -37)) or (3927==1413)) then v78[v80[1123 -((1057 -(714 + 225)) + 1003) ]]=v80[3];elseif ((v81>(40 -(75 -49))) or (1154<=788)) then if (v80[2 -0 ]<v78[v80[381 -(142 + 235) ]]) then v72=v72 + (4 -(1 + 2)) ;else v72=v80[1 + 2 ];end else local v153=977 -(553 + 424) ;local v154;while true do if ((0 -0)==v153) then v154=v80[2 + 0 ];v78[v154]=v78[v154](v13(v78,v154 + 1 + 0 ,v80[3]));break;end end end elseif ((v81<=(10 + 6)) or (1643>3379)) then if v78[v80[1 + 1 ]] then v72=v72 + 1 + 0 ;else v72=v80[6 -3 ];end elseif (v81==(47 -30)) then local v156=v80[4 -2 ];v78[v156](v78[v156 + 1 + 0 ]);else v78[v80[2]]=v29(v69[v80[14 -(15 -4) ]],nil,v61);end elseif (v81<=(774 -((1045 -(118 + 688)) + (562 -(25 + 23))))) then if (v81<=19) then if (v78[v80[1 + 1 + 0 ]]==v80[1333 -(797 + 532) ]) then v72=v72 + (1887 -(927 + 959)) + 0 ;else v72=v80[2 + 1 ];end elseif ((v81==(47 -27)) or (2803>4549)) then if  not v78[v80[1204 -(373 + 829) ]] then v72=v72 + (732 -(476 + 255)) ;else v72=v80[3];end else do return;end end elseif (v81<=(1153 -(369 + 761))) then if (v81==(13 + 9)) then v78[v80[2]]=v61[v80[5 -2 ]];else v78[v80[2]]=v78[v80[(16 -11) -2 ]];end elseif (v81>(262 -(64 + 174))) then local v163=0 + 0 ;local v164;while true do if ((v163==(0 -0)) or (220>=3022)) then v164=v80[338 -(144 + 192) ];v78[v164]=v78[v164](v78[v164 + ((949 -(16 + 716)) -(42 + 174)) ]);break;end end else v78[v80[2 + 0 ]]=v78[v80[3 + 0 ]][v80[2 + (3 -1) ]];end elseif (v81<=(1542 -(363 + (1238 -(11 + 86))))) then if ((2822==2822) and (v81<=(1611 -(1183 + (968 -571))))) then if ((v81<=(85 -(342 -(175 + 110)))) or (1061==1857)) then if (v81<=(20 + 6)) then v72=v80[3 + 0 ];elseif ((2760>1364) and (v81>(2002 -(1913 + 62)))) then local v167=v80[2 + (0 -0) ];local v168={v78[v167](v78[v167 + 1 ])};local v169=0;for v204=v167,v80[(9553 -7616) -(565 + 1368) ] do v169=v169 + (3 -2) ;v78[v204]=v168[v169];end elseif (v78[v80[1663 -(1477 + 184) ]]<v80[5 -1 ]) then v72=v72 + 1 ;else v72=v80[3 + 0 ];end elseif ((v81<=(885 -(564 + 292))) or (4902<=3595)) then v78[v80[2 -0 ]]=v78[v80[8 -5 ]];elseif (v81==(334 -(244 + 60))) then do return;end else v78[v80[1798 -(503 + 1293) ]]=v78[v80[(8 -5) + 0 ]] -v80[4] ;end elseif (v81<=34) then if (v81<=((368 + 140) -(41 + 435))) then for v135=v80[1003 -(938 + 63) ],v80[3 + (1061 -(810 + 251)) ] do v78[v135]=nil;end elseif ((v81==33) or (3852==293)) then v78[v80[1127 -(936 + 189) ]]=v78[v80[1 + 2 ]] + v80[4] ;else local v172=v80[2];v78[v172](v78[v172 + 1 ]);end elseif (v81<=36) then if (v81==35) then if (v80[(1121 + 494) -(1565 + 48) ]<v78[v80[3 + 1 ]]) then v72=v72 + 1 ;else v72=v80[1141 -(782 + 356) ];end else local v173=v80[2];local v174=v78[v80[3]];v78[v173 + (268 -(176 + 91)) ]=v174;v78[v173]=v174[v80[10 -6 ]];end elseif (v81==((17 + 36) -16)) then v78[v80[1094 -(879 + 96 + 117) ]]();else local v178=v80[1877 -(157 + 1718) ];local v179=v78[v80[3 + (533 -(43 + 490)) ]];v78[v178 + (3 -2) ]=v179;v78[v178]=v179[v80[13 -(742 -(711 + 22)) ]];end elseif (v81<=(1062 -(697 + 321))) then if ((v81<=(111 -70)) or (1559==4588)) then if (v81<=(82 -43)) then local v129=v80[4 -(7 -5) ];v78[v129](v13(v78,v129 + 1 + 0 ,v80[5 -2 ]));elseif ((v81==40) or (4484==788)) then v78[v80[2]]=v78[v80[7 -4 ]][v80[4]];else v78[v80[1229 -(322 + 905) ]]=v29(v69[v80[614 -(602 + 9) ]],nil,v61);end elseif (v81<=(1231 -(449 + 740))) then local v130=v80[874 -((1685 -(240 + 619)) + 12 + 34) ];local v131,v132=v71(v78[v130](v13(v78,v130 + ((1507 -559) -(245 + 702)) ,v80[9 -6 ])));v73=(v132 + v130) -1 ;local v133=0;for v137=v130,v73 do v133=v133 + 1 ;v78[v137]=v131[v133];end elseif ((4568>=3907) and (v81>43)) then v72=v80[3];else local v187=0 + 0 + (1744 -(1344 + 400)) ;local v188;while true do if (v187==(1898 -(260 + 1638))) then v188=v80[2];v78[v188]=v78[v188](v78[v188 + (441 -(382 + 58)) ]);break;end end end elseif (v81<=(150 -103)) then if ((1246<3470) and (v81<=(38 + 7))) then for v140=v80[(408 -(255 + 150)) -1 ],v80[8 -5 ] do v78[v140]=nil;end elseif (v81==(1251 -(902 + 303))) then local v189=v80[2];v78[v189]=v78[v189](v13(v78,v189 + 1 ,v73));else local v191=0 -0 ;local v192;local v193;local v194;local v195;while true do if (v191==(2 -1)) then v73=(v194 + v192) -(1 + 0 + 0) ;v195=1690 -(1121 + 569) ;v191=216 -(22 + 192) ;end if ((4068>=972) and ((683 -(483 + 108 + 92))==v191)) then v192=v80[1465 -(1404 + 59) ];v193,v194=v71(v78[v192](v13(v78,v192 + (2 -1) ,v80[3 -0 ])));v191=766 -(468 + 297) ;end if (v191==(564 -(334 + 228))) then for v228=v192,v73 do v195=v195 + (3 -2) ;v78[v228]=v193[v195];end break;end end end elseif ((493<3893) and (v81<=49)) then if ((v81==(111 -63)) or (1473>=3332)) then if (v80[2 -0 ]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[1 + 2 ];end else local v196=v80[2];v78[v196]=v78[v196](v13(v78,v196 + 1 ,v73));end elseif (v81==(286 -(141 + 95))) then local v198=v80[2 + 0 ];v78[v198]=v78[v198](v13(v78,v198 + (2 -(4 -3)) ,v80[(19 -13) -3 ]));else v78[v80[1 + 1 ]]=v61[v80[8 -5 ]];end v72=v72 + 1 + 0 ;break;end if (v86==(0 + 0)) then v80=v68[v72];v81=v80[1 -0 ];v86=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
